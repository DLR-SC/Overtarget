/*******************************************************************************
 * Copyright (c) 2018-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0
 *******************************************************************************/
grammar de.dlr.sc.overtarget.language.Overtarget with
                                      org.eclipse.xtext.common.Terminals

generate targetmodel "de.dlr.sc.overtarget.language"

TargetFile:
	TargetModel | TargetLibrary
;

TargetLibrary:
	'TargetLibrary' name= ID '{'
		(variables += VariableDefinition)*
		(repositoryLocations+=RepositoryLocation)* 
	'}'
;

BaseModel:
	'Target' name= ID '{'
		('Import' importedModels+=[TargetFile])*
		'OperatingSystem' os=OperatingSys
		('WindowingSystem' | 'WorkingSystem') ws=WindowingSys
		'Architecture' arch=Architecture
		'Locale' loc=Locale
		('TargetJRE' targetJre=jre)?
		(variables += VariableDefinition)*
		(excludedLocations += ExcludeLocation)*
		(repositoryLocations+=RepositoryLocation)*
	'}'
;

TargetModel:
	'Target' name= ID ('extends' super=[TargetModel])? '{'
		('Import' importedModels+=[TargetFile])*
		('OperatingSystem' os=OperatingSys)?
		(('WindowingSystem' | 'WorkingSystem') ws=WindowingSys)?
		('Architecture' arch=Architecture)?
		('Locale' loc=Locale)?
		('TargetJRE' targetJre=jre)?
		(variables += VariableDefinition)*
		(excludedLocations += ExcludeLocation)*
		(repositoryLocations+=RepositoryLocation)*
	'}'
;

Version hidden():
	INT'.'INT'.'INT('.'qualifier)?
;

SimpleVersion:
	INT('.'INT)*
;

Unit:
	'Unit' source=Source 'version' vers= (Version | 'newest') ';'
;

Source hidden():
	ValidID((dot(ValidID))|((hypen)ValidID))*':'?
;

UrlExpression:
	UrlElement ({UrlExpression.left=current} '+' right=UrlElement)*
;

UrlElement:
	UrlElementVariable | UrlElementString
;

UrlElementString:
	content = STRING
;

UrlElementVariable:
	content = [VariableDefinition|QualifiedName]
;


/* referencedTarget is used when the target has unresolved references. 
*  The referencedTarget keyword identifies the repositoryLocation as the reference to the unresolved target.
*/
RepositoryLocation:
	(referencedTarget?='ReferencedTarget')? 'RepositoryLocation' name=ID 'url' url=UrlExpression '{'
		  ((units+=Unit)* | 'Unit' addAll?='addAll;')
	'}'
;

ExcludeLocation: {ExcludeLocation}
	'ExcludeLocation' repositoryLocation=[RepositoryLocation|QualifiedName] '{'
			((units+=Unit)*	|'all;')
	'}'
;

VariableDefinition:
	AlreadyDeclaredVariable | NewVariableDefinition
;

AlreadyDeclaredVariable:
	'Override' ref=[NewVariableDefinition|QualifiedName] '=' value=STRING
;

NewVariableDefinition:
	'Variable' name=ID '=' value=STRING
;

qualifier:
	(INT|ID)+('-'(INT|ID))?
;

OperatingSys:
	'aix' |'hpux' |'linux'| 'macosx'| 'qnx' | 'solaris'| 'win32'
;

WindowingSys: 
	'carbon' | 'cocoa' | 'gtk'| 'motif'| 'photon' | 'wpf'| 'win32'
;

Architecture:
	'PA_RISC' | 'ia64' | 'ia64_32'| 'ppc'| 'sparc' | 'x86'| 'x86_64'
;

Locale:
	ID
;

http:
	'http://'
;

file:
	'file:/'
;

dot:
	'.'
;

hypen:
	'-'
;

jre:
	(ID|'-'|SimpleVersion)+
;

ValidID:
	ID | KEYWORD
;

KEYWORD:
	'Unit' | 'Target'
;

QualifiedName:
	ID ('.' ID)*
;